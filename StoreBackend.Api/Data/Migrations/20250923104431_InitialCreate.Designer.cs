// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StoreBackend.Api.Data;

#nullable disable

namespace StoreBackend.Api.Data.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20250923104431_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("StoreBackend.Api.Entities.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CurrentStock")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("ProductType")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("typeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("typeID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("StoreBackend.Api.Entities.ProductType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("ProductTypes");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Boardgame"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Book"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Videogame"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Software"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Hardware"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("StoreBackend.Api.Entities.Product", b =>
                {
                    b.HasOne("StoreBackend.Api.Entities.ProductType", "type")
                        .WithMany()
                        .HasForeignKey("typeID");

                    b.Navigation("type");
                });
#pragma warning restore 612, 618
        }
    }
}
